services:
  plex: # Media Server
    container_name: plex
    image: ghcr.io/linuxserver/plex:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - PUID=$PLEX_PUID
      - PGID=$PLEX_PGID
      - TZ=$TZ
    volumes:
      - $CONFIGDIR/plex:/config:rw
      - $PLEXMEDIA:/data/media:rw
      - $CONFIGDIR/plex/tmp:/transcode:rw    

  prowlarr: #indexer manager for Sonarr & Radarr
    image: ghcr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $CONFIGDIR/prowlarr:/config
    ports:
      - 9696:9696
    restart: unless-stopped

  radarr: #movie search agent
    image: ghcr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - UMASK=022
    volumes:
      - $CONFIGDIR/radarr:/config
      - $MEDIADIR:/media
    ports:
      - 7878:7878
    restart: unless-stopped

  sonarr: #TV show search agent
    image: ghcr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - UMASK=022
    volumes:
      - $CONFIGDIR/sonarrV3:/config
      - $MEDIADIR:/media
    ports:
      - 8989:8989
    restart: unless-stopped

  bazarr: #subtitle grabber
    image: ghcr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $CONFIGDIR/bazarr:/config
      - $MEDIADIR/libraries/movies:/movies #optional
      - $MEDIADIR/libraries/tv:/tv #optional
      - $MEDIADIR/libraries/anime:/anime #optional
    ports:
      - 6767:6767
    restart: unless-stopped

  overseerr: #media requesting tool
    image: ghcr.io/linuxserver/overseerr:latest
    container_name: overseerr
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
    volumes:
      - $CONFIGDIR/overseerr:/app/config
    ports:
      - 5055:5055
    restart: unless-stopped

  tautulli: #plex monitoring
    image: ghcr.io/linuxserver/tautulli:latest
    container_name: tautulli
    environment:
      - PUID=$PUID
      - PGID=$PGID
      - TZ=$TZ
      - UMASK=002
      - DEBUG=no
    volumes:
      - $CONFIGDIR/tautulli:/config
    ports:
      - 8181:8181
    restart: unless-stopped

  organizr:
    image: organizr/organizr:latest
    container_name: organizr
    environment:
      - PUID=$ORGANIZR_PUID
      - PGID=$ORGANIZR_PGID
      - TZ=$TZ
    volumes:
      - $CONFIGDIR/organizr:/config
    ports:
      - 80:80
    restart: unless-stopped

  vpn:
    container_name: GlueTun-Nord
    image: qmcgaw/gluetun:latest
    cap_add:
      - NET_ADMIN
    ports:
        - 8191:8191
        - 8112:8112
        - 6881:6881
        - 6881:6881/udp
    environment:
      - VPN_SERVICE_PROVIDER=$VPN_SERVICE_PROVIDER
      - OPENVPN_USER=$OPENVPN_USER
      - OPENVPN_PASSWORD=$OPENVPN_PASSWORD
      - SERVER_REGIONS=$SERVER_REGIONS
      - COUNTRY=$SERVER_REGIONS
      - VPN_TYPE=$VPN_TYPE
      - TZ=$TZ
    restart: unless-stopped

  deluge:
    container_name: deluge
    image: ghcr.io/linuxserver/deluge:latest
    network_mode: "service:vpn"
    restart: always
    environment:
      - WEBUI_PORT=8112
      - PUID=$PUID # default user id, defined in .env
      - PGID=$PGID # default group id, defined in .env
      - TZ=$TZ # timezone, defined in .env
    volumes:
      - $MEDIADIR/downloads:/downloads # downloads folder
      - $CONFIGDIR/deluge:/config # config files

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    network_mode: "service:vpn"
    environment:
      - TZ=$TZ
      - LOG_HTML=${LOG_HTML:-false}
      - HOST=${HOST:-0.0.0.0}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-None}
      - HEADLESS=${HEADLESS:-true}
    restart: unless-stopped

  portainer: #container management
    image: portainer/portainer-ce:latest
    container_name: portainer
    network_mode: host
    volumes:
      - $CONFIGDIR/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - TZ=$TZ
    ports:
      - 9000:9000 #change before the ':' if necessary to avoid port conflicts
    restart: unless-stopped

  netdata:
    image: netdata/netdata:latest
    container_name: netdata
    network_mode: host
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
      - SYS_ADMIN
    security_opt:
      - apparmor:unconfined
    volumes:
      - $CONFIGDIR/netdata/netdataconfig:/etc/netdata
      - $CONFIGDIR/netdata/netdatalib:/var/lib/netdata
      - $CONFIGDIR/netdata/netdatacache:/var/cache/netdata
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 19999:19999

  watchtower:
    image: containrrr/watchtower:latest
    network_mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_SCHEDULE=0 0 4 * * 0
      - WATCHTOWER_CLEANUP=true
      - TZ=$TZ
